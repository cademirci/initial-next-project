html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  margin: 0;
  color: var(--foreground);
  background: var(--background);
  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  margin: 0;
}

p {
  padding: .75rem 0;
}

strong {
  color: var(--foreground-strong);
}

small {
  color: rgb(var(--frosted-steel));
}

a {
  color: var(--highlight);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: normal;
  padding: 1rem 0;
}

h1 em, h2 em, h3 em {
  color: rgb(var(--silver));
  font-size: 1rem;
}

h1 em em, h2 em em, h3 em em {
  font-style: normal;
}

code, pre {
  font-family: var(--font-geist-mono);
  font-size: .95em;
}

code {
  counter-reset: line;
  letter-spacing: 0;

  /* inline code */
  padding: .2rem .4rem;
  color: rgb(var(--silver));
  border: 1px solid rgb(var(--frosted-steel));
  border-radius: var(--border-radius-small);
  background-color: rgb(var(--antracite-dark));
}

pre code {
  padding: 0;
  border: none;
  color: inherit;
  background-color: inherit;
}

pre {
  padding: 1rem;
  margin: 1rem auto;
  border: 1px solid rgb(var(--antracite));
  border-radius: var(--border-radius-small);
  background-color: rgb(var(--antracite-darker));
  overflow-x: auto;
}

/* line numbers */
code > [data-line]::before {
  counter-increment: line;
  content: counter(line);
 
  /* Other styling */
  display: inline-block;
  width: 1rem;
  margin-right: 1rem;
  text-align: right;
  color: rgb(var(--silver));
}

code[data-line-numbers-max-digits="2"] > [data-line]::before {
  width: 2rem;
}
 
code[data-line-numbers-max-digits="3"] > [data-line]::before {
  width: 3rem;
}

::-webkit-scrollbar {
  width: 1rem;
}

/* scroll bar background */
::-webkit-scrollbar-track {
  background-color: rgba(15, 15, 15, 1);
  border-radius: var(--border-radius-small);
}

/* scroll bar thumb (floating thing) */
::-webkit-scrollbar-thumb {
  background-color: #333; 
  border-radius: var(--border-radius-small);
}

::-webkit-scrollbar-thumb:hover {
  background-color: #444;
}

ol, ul {
  list-style-position: inside;
  padding: .75rem 1rem;
}

ol ol {
  list-style-type: upper-roman;
}

li {
  padding: 0 .5rem;
}

li::marker {
  color: rgb(var(--silver));
} 

input[type="checkbox"] {
  margin-right: .75rem; 
  transform: scale(1.5); 
}

/* 
markdown checkboxes are disabled, because they aren't for users to check or 
uncheck them, therefore they are strictly disabled gray, maybe implemented by 
the browsers themselves and background-color and color doesn't work.
so that is the solution */
input[type="checkbox"][disabled],
input[type="checkbox"][disabled][checked] {
  filter: invert(100%) hue-rotate(18deg) brightness(5);
}

/* list bullets dissapear, for some reason */
li:has(> input[type="checkbox"]) {
  display: flex;
  align-items: center;
}

li:has(> input[checked]) {
  text-decoration: line-through; 
  color: rgb(var(--frosted-steel)); 
}

input {
  padding: .5rem;
  background-color: rgb(var(--background));
  color: rgb(var(--foreground));
  font-size: .9em;
  outline: none;
  border: 1px solid rgb(var(--antracite));
  border-radius: var(--border-radius-small);
}

input:hover {
  background-color: var(--alt-background);
}

input::placeholder {
  color: rgb(var(--frosted-steel));
}

table {
  border-collapse: collapse; 
  margin: 2rem 0; 
}

th, td {
  text-align: left;
  padding: .75rem;
}

th {
  border: 1px solid rgb(var(--highlight-darker));
  background-color: rgb(var(--highlight-darker));
  font-weight: normal;
}

td {
  border: 1px solid rgb(var(--highlight-darker)); 
}

tr:nth-child(odd) {
  background-color: rgb(var(--black));
}

tr:nth-child(even) {
  background-color: rgb(var(--antracite-dark));
}

tr:hover {
  background-color: rgb(var(--antracite)); 
}

blockquote {
  margin: 1rem 0;
  padding: 0 1rem;
  background-color: rgb(var(--antracite-dark));
  border-left: 5px solid rgb(var(--highlight-darker));
}

q {
  quotes: "“" "”" "‘" "’";
}

hr {
  border: 2px solid rgb(var(--antracite));
  margin: 2rem 0;
}
